# appveyor configuration, based on the example provided by
# https://github.com/timcera/wdmtoolbox/
# other python examples are given in:
# https://github.com/ogrisel/python-appveyor-demo/
# http://tjelvarolsson.com/blog/how-to-continuously-test-your-python-code-on-windows-using-appveyor/

skip_commits:
  message: /.*\[skip appveyor\].*/

environment:
  matrix:
    - PYTHON_VERSION: "2.7"
      MINICONDA: C:\Miniconda
    - PYTHON_VERSION: "3.4"
      MINICONDA: C:\Miniconda3

#platform:
#  - x86
#  - x64

matrix:
  # set this flag to immediately finish build once one of the jobs fails.
  fast_finish: true
  # fast_finish: false

init:
  - "ECHO %PYTHON_VERSION% %MINICONDA%"

install:
  - "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  # excecute this test in powershell
#  - ps: if ($env:Platform -Match "x64") {$env:PATH="C:\Miniconda-x64\Scripts"}
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - conda create -q -n test-environment python=%PYTHON_VERSION% numpy"
#       --name python%PYTHON_VERSION%
  - echo %PATH%
  - echo %PYTHONHOME%
  - echo "===== content of activate.bat:"
  - type %PATH%\activate.bat
  - echo "===== end of content of activate:"
  - activate test-environment
#  - activate python%PYTHON_VERSION%
  - pip install coverage
  - pip install -i https://pypi.anaconda.org/carlkl/simple mingwpy
  - conda install -q --name python%PYTHON_VERSION% setuptools numpy wheel
  - python.exe -c "print 'numpy test:'; import numpy; print numpy.__file__"
  - python.exe -c "print 'wheel test:'; import wheel; print wheel.__file__"
  #### to use this, I'll probably need to use numpy.distutils.core
  ##- python.exe setup.py build --compiler=mingw32 --fcompiler=gfortran
  #### why does this not work?
  - python.exe setup.py build --preferred-c-compiler=mingw32 --preferred-fortran-compiler=gfortran
  - python.exe setup.py install

build: off

#test_script:
#  - nosetests

after_test:
  # This step builds your wheels.
  - python.exe setup.py bdist_wheel

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*.whl
